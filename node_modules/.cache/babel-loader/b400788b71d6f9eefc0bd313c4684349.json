{"ast":null,"code":"var _jsxFileName = \"/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/components/scene/Tree.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Ball } from '../scene';\n\nconst Tree = ({\n  baubles,\n  setBaubles,\n  position,\n  color,\n  speed,\n  args\n}) => {\n  const mesh = useRef();\n\n  const addBauble = point => {\n    const newElement = /*#__PURE__*/React.createElement(Ball, {\n      position: [point.x, point.y, point.z],\n      color: \"red\",\n      args: [.2, 10, 10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 28\n      }\n    });\n    setSpheres([...spheres, newElement]);\n  };\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    onPointerDown: e => addBauble(e.point) // onPointerMove={e => clickedOnTree(e.point)}\n    ,\n    position: position,\n    ref: mesh,\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"coneBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Tree;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/components/scene/Tree.js"],"names":["React","useRef","useState","useEffect","useSpring","a","useFrame","Ball","Tree","baubles","setBaubles","position","color","speed","args","mesh","addBauble","point","newElement","x","y","z","setSpheres","spheres","expand","setExpand","props","scale","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA,KAAxC;AAA+CC,EAAAA;AAA/C,CAAD,KAA2D;AAEpE,QAAMC,IAAI,GAAGd,MAAM,EAAnB;;AAEA,QAAMe,SAAS,GAAIC,KAAD,IAAW;AACzB,UAAMC,UAAU,gBAAG,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAACD,KAAK,CAACE,CAAP,EAAUF,KAAK,CAACG,CAAhB,EAAmBH,KAAK,CAACI,CAAzB,CAAhB;AAA6C,MAAA,KAAK,EAAC,KAAnD;AAAyD,MAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AACAC,IAAAA,UAAU,CAAC,CAAC,GAAGC,OAAJ,EAAaL,UAAb,CAAD,CAAV;AACH,GAHD;;AAKA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMwB,KAAK,GAAGtB,SAAS,CAAC;AACpBuB,IAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAH,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADd,GAAD,CAAvB;AAIA,sBACI,oBAAC,CAAD,CAAG,IAAH;AACA,IAAA,aAAa,EAAEI,CAAC,IAAIZ,SAAS,CAACY,CAAC,CAACX,KAAH,CAD7B,CAEA;AAFA;AAIA,IAAA,QAAQ,EAAEN,QAJV;AAKA,IAAA,GAAG,EAAEI,IALL;AAOA,IAAA,KAAK,EAAEW,KAAK,CAACC,KAPb;AAQA,IAAA,UAAU,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASI;AAAoB,IAAA,MAAM,EAAC,UAA3B;AAAsC,IAAA,IAAI,EAAEb,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAEF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAeH,CA7BD;;AA+BA,eAAeJ,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Ball } from '../scene';\n\nconst Tree = ({ baubles, setBaubles, position, color, speed, args }) => {\n\n    const mesh = useRef();\n\n    const addBauble = (point) => {\n        const newElement = <Ball position={[point.x, point.y, point.z]} color='red' args={[.2, 10, 10]}/>;\n        setSpheres([...spheres, newElement]);\n    }\n\n    const [expand, setExpand] = useState(false);\n    const props = useSpring({\n        scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n    });\n    \n    return (\n        <a.mesh\n        onPointerDown={e => addBauble(e.point)}\n        // onPointerMove={e => clickedOnTree(e.point)}\n\n        position={position}\n        ref={mesh}\n\n        scale={props.scale}\n        castShadow>\n            <coneBufferGeometry attach='geometry' args={args} />\n            <meshStandardMaterial attach='material' color={color} />\n        </a.mesh>\n    );\n\n}\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}