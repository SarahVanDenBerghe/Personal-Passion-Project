/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei/useGLTF';

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/treebinary.glb');
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 3.2, 0]} rotation={[-Math.PI / 2, 0, -Math.PI / 2]} userData={{ name: 'Tree Trunk' }}>
        <mesh
          material={materials.Groen}
          geometry={nodes.Trunk.geometry}
          position={[0, 0, -2.5]}
          rotation={[Math.PI / 2, 0, 0]}
          userData={{ name: 'Trunk' }}
        />
      </group>
      <group position={[0, 5.3, 0]} userData={{ name: 'Tree Leaves' }}>
        <group position={[0, 1.37, 0]} rotation={[-Math.PI, Math.PI / 3, -Math.PI]} userData={{ name: 'Leaves' }}>
          <group position={[0, 0.03, 0]} userData={{ name: '1' }}>
            <mesh material={materials.Groen} geometry={nodes['1-Groen'].geometry} userData={{ name: '1-Groen' }} />
            <mesh material={materials.Groen} geometry={nodes['1-Groen_1'].geometry} userData={{ name: '1-Groen' }} />
          </group>
          <group position={[0, -0.5, 0]} rotation={[0, -0.7, 0]} userData={{ name: '2' }}>
            <mesh material={materials.Groen} geometry={nodes['2-Groen'].geometry} userData={{ name: '2-Groen' }} />
            <mesh material={materials.Groen} geometry={nodes['2-Groen_1'].geometry} userData={{ name: '2-Groen' }} />
          </group>
          <group position={[0, -1.12, 0.01]} rotation={[0, -0.11, 0]} userData={{ name: '3' }}>
            <mesh material={materials.Groen} geometry={nodes['3-Groen'].geometry} userData={{ name: '3-Groen' }} />
            <mesh material={materials.Groen} geometry={nodes['3-Groen_1'].geometry} userData={{ name: '3-Groen' }} />
          </group>
          <group position={[0, -1.79, 0.01]} rotation={[0, -0.71, 0]} userData={{ name: '4' }}>
            <mesh material={materials.Groen} geometry={nodes['4-Groen'].geometry} userData={{ name: '4-Groen' }} />
            <mesh material={materials.Groen} geometry={nodes['4-Groen_1'].geometry} userData={{ name: '4-Groen' }} />
          </group>
          <group position={[0, -2.7, 0.01]} rotation={[0, -0.1, 0]} userData={{ name: '5' }}>
            <mesh material={materials.Groen} geometry={nodes['5-Groen'].geometry} userData={{ name: '5-Groen' }} />
            <mesh material={materials.Groen} geometry={nodes['5-Groen_1'].geometry} userData={{ name: '5-Groen' }} />
          </group>
          <group position={[0, -3.7, 0.01]} rotation={[0, 0.51, 0]} userData={{ name: '6' }}>
            <mesh material={materials.Groen} geometry={nodes['6-Groen'].geometry} userData={{ name: '6-Groen' }} />
            <mesh material={materials.Groen} geometry={nodes['6-Groen_1'].geometry} userData={{ name: '6-Groen' }} />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/treebinary.glb');
