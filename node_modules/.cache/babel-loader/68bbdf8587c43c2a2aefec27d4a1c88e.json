{"ast":null,"code":"var _jsxFileName = \"/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { Box, Cone, softShadows, MeshWobbleMaterial, OrbitControls } from \"drei\";\nimport Header from \"./components/header\";\nimport \"./App.scss\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { Lights } from 'components/scene/index';\nsoftShadows();\n\nconst SpinningMesh = ({\n  position,\n  color,\n  speed,\n  args\n}) => {\n  const mesh = useRef(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    position: position,\n    ref: mesh,\n    onClick: () => setExpand(!expand),\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"coneBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    shadowMap: true,\n    camera: {\n      position: [-5, 2, 10],\n      fov: 60\n    },\n    background: 'pink',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Lights, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, -3, 0],\n    receiveShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [100, 100],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"shadowMaterial\", {\n    attach: \"material\",\n    opacity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SpinningMesh, {\n    position: [0, 1, 0],\n    color: \"#669966\",\n    args: [3, 9, 32],\n    speed: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(OrbitControls, {\n    enableZoom: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/App.js"],"names":["React","useRef","useState","Canvas","useFrame","Box","Cone","softShadows","MeshWobbleMaterial","OrbitControls","Header","useSpring","a","Lights","SpinningMesh","position","color","speed","args","mesh","expand","setExpand","props","scale","App","fov","Math","PI"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { Box, Cone, softShadows, MeshWobbleMaterial, OrbitControls } from \"drei\";\nimport Header from \"./components/header\";\nimport \"./App.scss\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { Lights } from 'components/scene/index';\n\nsoftShadows();\n\n\n\nconst SpinningMesh = ({ position, color, speed, args }) => {\n  const mesh = useRef();\n  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  \n  return (\n    <a.mesh\n      position={position}\n      ref={mesh}\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow>\n      <coneBufferGeometry attach='geometry' args={args} />\n      <meshStandardMaterial attach='material' color={color} />\n    </a.mesh>\n  );\n};\n\n\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Canvas\n        colorManagement\n        shadowMap\n        camera={{ position: [-5, 2, 10], fov: 60 }}\n        background={'pink'}>\n        <Lights />\n        {/* <ambientLight intensity={0.3} />\n        <directionalLight\n          castShadow\n          position={[0, 10, 0]}\n          intensity={1.5}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={50}\n          shadow-camera-left={-10}\n          shadow-camera-right={10}\n          shadow-camera-top={10}\n          shadow-camera-bottom={-10}\n        />\n        <pointLight position={[-10, 0, -20]} intensity={0.5} />\n        <pointLight position={[0, -10, 0]} intensity={1.5} /> */}\n        <group>\n          {/* This mesh is the plane (The floor) */}\n          <mesh\n            rotation={[-Math.PI / 2, 0, 0]}\n            position={[0, -3, 0]}\n            receiveShadow>\n            <planeBufferGeometry attach='geometry' args={[100, 100]} />\n            <shadowMaterial attach='material' opacity={0.3} />\n          </mesh>\n\n          <SpinningMesh\n            position={[0, 1, 0]}\n            color='#669966'\n            args={[3, 9, 32]}\n            speed={2}\n          />\n        </group>\n\n        <OrbitControls \n          enableZoom={false}\n        />\n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}