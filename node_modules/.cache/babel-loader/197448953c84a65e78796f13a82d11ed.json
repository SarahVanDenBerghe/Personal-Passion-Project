{"ast":null,"code":"var _jsxFileName = \"/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/components/scene/Tree.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Ball } from '../scene';\n\nconst Tree = ({\n  spheres,\n  setSpheres,\n  position,\n  color,\n  speed,\n  args\n}) => {\n  // useEffect(() => {\n  //     setSpheres([newElement]);\n  // }, []);\n  const mesh = useRef(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const clickedOnTree = e => {\n    console.log(e.point);\n    console.log(e.point.x);\n    const newElement = /*#__PURE__*/React.createElement(Ball, {\n      position: [e.point.x, e.point.y, e.point.z],\n      color: \"red\",\n      args: [.2, 10, 10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 28\n      }\n    });\n    setSpheres([newElement]);\n  };\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    onPointerDown: e => clickedOnTree(e),\n    position: position,\n    ref: mesh // onClick={() => setExpand(!expand)}\n    ,\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"coneBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Tree;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/components/scene/Tree.js"],"names":["React","useRef","useState","useEffect","useSpring","a","useFrame","Ball","Tree","spheres","setSpheres","position","color","speed","args","mesh","clickedOnTree","e","console","log","point","x","newElement","y","z","expand","setExpand","props","scale"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA,KAAxC;AAA+CC,EAAAA;AAA/C,CAAD,KAA2D;AAEpE;AACA;AACA;AAEA,QAAMC,IAAI,GAAGd,MAAM,EAAnB,CANoE,CAOpE;;AAEA,QAAMe,aAAa,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,KAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,KAAF,CAAQC,CAApB;AACA,UAAMC,UAAU,gBAAG,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAACL,CAAC,CAACG,KAAF,CAAQC,CAAT,EAAYJ,CAAC,CAACG,KAAF,CAAQG,CAApB,EAAuBN,CAAC,CAACG,KAAF,CAAQI,CAA/B,CAAhB;AAAmD,MAAA,KAAK,EAAC,KAAzD;AAA+D,MAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AACAd,IAAAA,UAAU,CAAC,CAACY,UAAD,CAAD,CAAV;AACH,GALD;;AAOA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMyB,KAAK,GAAGvB,SAAS,CAAC;AACpBwB,IAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAH,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADd,GAAD,CAAvB;AAIA,sBACI,oBAAC,CAAD,CAAG,IAAH;AACA,IAAA,aAAa,EAAER,CAAC,IAAID,aAAa,CAACC,CAAD,CADjC;AAGA,IAAA,QAAQ,EAAEN,QAHV;AAIA,IAAA,GAAG,EAAEI,IAJL,CAMA;AANA;AAQA,IAAA,KAAK,EAAEY,KAAK,CAACC,KARb;AASA,IAAA,UAAU,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AAAoB,IAAA,MAAM,EAAC,UAA3B;AAAsC,IAAA,IAAI,EAAEd,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAEF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAgBH,CArCD;;AAuCA,eAAeJ,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Ball } from '../scene';\n\nconst Tree = ({ spheres, setSpheres, position, color, speed, args }) => {\n\n    // useEffect(() => {\n    //     setSpheres([newElement]);\n    // }, []);\n\n    const mesh = useRef();\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n    const clickedOnTree = (e) => {\n        console.log(e.point);\n        console.log(e.point.x);\n        const newElement = <Ball position={[e.point.x, e.point.y, e.point.z]} color='red' args={[.2, 10, 10]}/>;\n        setSpheres([newElement]);\n    }\n\n    const [expand, setExpand] = useState(false);\n    const props = useSpring({\n        scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n    });\n    \n    return (\n        <a.mesh\n        onPointerDown={e => clickedOnTree(e)}\n\n        position={position}\n        ref={mesh}\n\n        // onClick={() => setExpand(!expand)}\n\n        scale={props.scale}\n        castShadow>\n            <coneBufferGeometry attach='geometry' args={args} />\n            <meshStandardMaterial attach='material' color={color} />\n        </a.mesh>\n    );\n\n}\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}