{"ast":null,"code":"var _jsxFileName = \"/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/components/scene/Tree.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Ball } from '../scene';\n\nconst Tree = ({\n  setSpheres,\n  position,\n  color,\n  speed,\n  args\n}) => {\n  const newElement = /*#__PURE__*/React.createElement(Ball, {\n    position: [0, 5, 0],\n    color: \"red\",\n    args: [.2, 10, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 24\n    }\n  });\n  useEffect(() => {\n    setSpheres([...spheres, newElement]);\n  }, []);\n  const mesh = useRef(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const clickedOnTree = e => {\n    console.log(e.point);\n  };\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    onPointerDown: e => clickedOnTree(e),\n    position: position,\n    ref: mesh // onClick={() => setExpand(!expand)}\n    ,\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"coneBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Tree;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20202021/Development/Personal Passion Project/_Personal-Passion-Project/react-three-fiber-master/src/components/scene/Tree.js"],"names":["React","useRef","useState","useEffect","useSpring","a","useFrame","Ball","Tree","setSpheres","position","color","speed","args","newElement","spheres","mesh","clickedOnTree","e","console","log","point","expand","setExpand","props","scale"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA,KAA/B;AAAsCC,EAAAA;AAAtC,CAAD,KAAkD;AAC3D,QAAMC,UAAU,gBAAG,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AAA2B,IAAA,KAAK,EAAC,KAAjC;AAAuC,IAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAAC,CAAC,GAAGM,OAAJ,EAAaD,UAAb,CAAD,CAAV;AACH,GAFQ,EAEN,EAFM,CAAT;AAMA,QAAME,IAAI,GAAGf,MAAM,EAAnB,CAT2D,CAU3D;;AAEA,QAAMgB,aAAa,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,KAAd;AACH,GAFD;;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMsB,KAAK,GAAGpB,SAAS,CAAC;AACpBqB,IAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAH,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADd,GAAD,CAAvB;AAIA,sBACI,oBAAC,CAAD,CAAG,IAAH;AACA,IAAA,aAAa,EAAEJ,CAAC,IAAID,aAAa,CAACC,CAAD,CADjC;AAGA,IAAA,QAAQ,EAAER,QAHV;AAIA,IAAA,GAAG,EAAEM,IAJL,CAMA;AANA;AAQA,IAAA,KAAK,EAAEQ,KAAK,CAACC,KARb;AASA,IAAA,UAAU,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AAAoB,IAAA,MAAM,EAAC,UAA3B;AAAsC,IAAA,IAAI,EAAEZ,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAEF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAgBH,CArCD;;AAuCA,eAAeH,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Ball } from '../scene';\n\nconst Tree = ({ setSpheres, position, color, speed, args }) => {\n    const newElement = <Ball position={[0, 5, 0]} color='red' args={[.2, 10, 10]}/>;\n\n    useEffect(() => {\n        setSpheres([...spheres, newElement]);\n    }, []);\n\n\n    \n    const mesh = useRef();\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n    const clickedOnTree = (e) => {\n        console.log(e.point)\n    }\n\n    const [expand, setExpand] = useState(false);\n    const props = useSpring({\n        scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n    });\n    \n    return (\n        <a.mesh\n        onPointerDown={e => clickedOnTree(e)}\n\n        position={position}\n        ref={mesh}\n\n        // onClick={() => setExpand(!expand)}\n\n        scale={props.scale}\n        castShadow>\n            <coneBufferGeometry attach='geometry' args={args} />\n            <meshStandardMaterial attach='material' color={color} />\n        </a.mesh>\n    );\n\n}\n\nexport default Tree;"]},"metadata":{},"sourceType":"module"}